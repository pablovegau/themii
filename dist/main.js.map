{"mappings":"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","sources":["src/index.js","src/themeProvider.js","src/tokensUtils.js"],"sourcesContent":["export { ThemeProvider, ThemeContext } from './themeProvider'\nexport { getTokens } from './tokensUtils'\n","import { createContext, useState, useEffect } from \"react\"\n\nexport const ThemeContext = createContext()\nconst defaultTheme = \"tlight\"\n\nexport function ThemeProvider(props) {\n  const [theme, setTheme] = useState()\n\n  useEffect(() => {\n    const localStorageTheme = window.localStorage.getItem(\"theme\") || undefined\n    const defaultUserThemeIsDark = window.matchMedia(\"(prefers-color-scheme:dark)\").matches;\n\n    if (localStorageTheme) {\n      setTheme(localStorageTheme);\n    } else if (defaultUserThemeIsDark) {\n      setTheme(\"tdark\");\n    } else {\n      setTheme(defaultTheme);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (theme) {\n      document.body.dataset.theme = theme\n      window.localStorage.setItem(\"theme\", theme)\n    }\n  }, [theme]);\n\n  const value = { theme, setTheme }\n  return <ThemeContext.Provider value={value} {...props} />\n}\n","const SEPARATOR = \"--\";\n\nfunction isObject(obj) {\n  return !!(typeof obj === \"object\");\n}\n\nfunction transformTokensToString(tokensObject) {\n  return Object.entries(tokensObject)\n    .map(([key, value]) => `${key}: ${value}`)\n    .join(\"; \");\n}\n\nfunction createTokensObjects(prefix, tokens, themesTokens, themes) {\n  for (const key in tokens) {\n    const newPrefix = prefix + SEPARATOR + key.replace(\"_\", \"-\").toLowerCase();\n    if (isObject(tokens[key])) {\n      createTokensObjects(newPrefix, tokens[key], themesTokens, themes);\n    } else {\n      const themesKeys = Object.keys(themes);\n\n      if (themesKeys.includes(key)) {\n        themesTokens[`${key.toLowerCase()}`][prefix] = tokens[key];\n      } else if (key === \"DEFAULT\") {\n        themesKeys.forEach((KEY) => {\n          themesTokens[`${KEY.toLowerCase()}`][prefix] = tokens[\"DEFAULT\"];\n        });\n      } else {\n        themesTokens.root[newPrefix] = tokens[key];\n      }\n    }\n  }\n}\n\nexport function getTokensObject(baseTokens, themes, prefix) {\n  //  The tokens will be saved here, separated in objects:\n  //    - root: where lives tokens without theme\n  //    - [theme]: where lives tokens with theme, one object per theme\n  let tokens = {\n    root: {}\n  };\n\n  // We create the theme tokens object\n  for (const theme in themes) {\n    tokens[`${themes[theme]}`] = {};\n  }\n\n  createTokensObjects(prefix, baseTokens, tokens, themes);\n\n  return tokens;\n}\n\nexport function getTokensString(tokens) {\n  let allThemesTokens = \"\";\n\n  for (const themeKey in tokens) {\n    if (themeKey === \"root\") {\n      // The root tokens will be attached to the :root\n      allThemesTokens += `\n        :root {\n          ${transformTokensToString(tokens.root)}\n        }\n    `;\n    } else {\n      // For each theme we will create a data-theme property\n      // in the body were the tokens will be attackeds\n      allThemesTokens += `\n        body[data-theme=\"${themeKey}\"] {\n          ${transformTokensToString(tokens[themeKey])}\n        }\n      `;\n    }\n  }\n\n  return allThemesTokens;\n}\n\nexport function getTokens({ baseTokens, themes, prefix }) {\n  const tokens = getTokensObject(baseTokens, themes, prefix);\n\n  return getTokensString(tokens);\n}\n"],"names":[],"version":3,"file":"main.js.map"}